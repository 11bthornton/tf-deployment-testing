name: (template) build dotnet solution - build.template.yml

on:
  workflow_call:
    inputs:
      solution-path:
        required: true
        type: string
        description: Path to the folder containing the .sln file

      project-path:
        required: false
        type: string
        description: Path to the .csproj file to pack or publish

      artifact-name:
        required: true
        type: string
        description: Name of the artifact to upload

jobs:
  build:
    name: Build .NET Solution
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore NuGet packages
        run: dotnet restore ${{ inputs.solution-path }}

      - name: Build solution
        run: dotnet build ${{ inputs.solution-path }} --configuration Release --no-restore

      - name: Run tests and collect results
        run: |
          RESULTS_DIR="./test-results"
          mkdir -p "$RESULTS_DIR"

          echo "## ðŸ§ª Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          find ${{ inputs.project-path }}/.. -type f -name '*.Tests.csproj' | while read test_project; do
            project_name=$(basename "$test_project" .csproj)

            echo "Running tests in $project_name..."
            dotnet test "$test_project" \
              --configuration Release \
              --no-build \
              --logger:"trx;LogFileName=${project_name}.trx" \
              --results-directory "$RESULTS_DIR"

            passed=$(grep -oPm1 '(?<=passed=")\d+' "$RESULTS_DIR/${project_name}.trx" || echo 0)
            failed=$(grep -oPm1 '(?<=failed=")\d+' "$RESULTS_DIR/${project_name}.trx" || echo 0)
            skipped=$(grep -oPm1 '(?<=skipped=")\d+' "$RESULTS_DIR/${project_name}.trx" || echo 0)
            total=$((passed + failed + skipped))

            echo "- **$project_name**: $passed passed, $failed failed, $skipped skipped (total: $total)" >> $GITHUB_STEP_SUMMARY
          done

      - name: Set short SHA
        id: vars
        run: echo "short_sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Publish application
        run: dotnet publish ${{ inputs.project-path }} --configuration Release --no-build --output ./publish

      - name: Upload Published App
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifact-name }}-${{ steps.vars.outputs.short_sha }}
          path: ./publish
