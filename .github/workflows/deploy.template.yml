name: (template) deploy.template.yml

on:
  workflow_call:
    inputs:
      github-environment:
        required: true
        type: string
        description: The GitHub environment to deploy to
      environment:
        required: true
        type: string
        description: The environment to deploy to
      iac-config-directory:
        required: true
        type: string
        description: The directory containing the IaC configuration files
    secrets:
      azure_service_connection:
        required: true
        description: Azure credentials JSON for Terraform operations

permissions:
  issues: write
  contents: read

jobs:
  plan:
    environment: ${{ inputs.github-environment }}
    name: 'Plan'
    runs-on: ubuntu-latest
    outputs:
      plan-artifact-name: ${{ steps.plan.outputs.plan-artifact-name }}
      has-changes: ${{ steps.plan.outputs.plan-exit-code == '2' && 'true' || 'false' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Terraform Plan
        id: plan
        uses: ./.github/actions/terraform/plan
        with:
          working-directory: ${{ inputs.iac-config-directory }}
          unique-suffix: ${{ inputs.environment }}
          credentials: ${{ secrets.azure_service_connection }}

      - name: Output Terraform Plan to Summary
        run: |
          echo "## Terraform Plan" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo '```terraform' >> $GITHUB_STEP_SUMMARY
          cat ${{ inputs.iac-config-directory }}/tfplan.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

  deploy:
    needs: plan
    environment: ${{ needs.plan.outputs.has-changes == 'true' && 'terraform_plan_review' || '' }}
    name: 'Apply + Deploy'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Terraform Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.plan.outputs.plan-artifact-name }}
          path: ./tfplan-artifact

      - name: Terraform Apply
        uses: ./.github/actions/terraform/apply
        with:
          working-directory: ${{ inputs.iac-config-directory }}
          plan-artifact-name: ${{ needs.plan.outputs.plan-artifact-name }}
          credentials: ${{ secrets.azure_service_connection }}

      - name: Build Blazor WebAssembly with Oryx
        uses: azure/appservice-build@v2
        with:
          platform: dotnet
          platform-version: '8.0'                            # Change to match your .NET SDK version
          package: 'src/BlazorApp1'                          # Path to the Blazor project
          output-path: '${{ github.workspace }}/build-output' # Output folder to deploy

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: my-blazor-app-efghj
          package: '${{ github.workspace }}/build-output'