name: Terraform Plan

on:
  workflow_call:
    inputs:
      working_directory:
        description: 'Directory containing Terraform configuration'
        required: true
        type: string
      terraform_version:
        description: 'Terraform version to use'
        required: false
        type: string
        default: '1.5.0'
      credentials_secret_name:
        description: 'Name of the Azure credentials secret'
        required: true
        type: string
    secrets:
      azure_credentials:
        description: 'Azure service principal credentials'
        required: true
      repo_token:
        description: 'GitHub token for PR comments'
        required: true

jobs:
  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    
    outputs:
      plan_output: ${{ steps.plan.outputs.stdout }}
      fmt_outcome: ${{ steps.fmt.outcome }}
      init_outcome: ${{ steps.init.outcome }}
      validate_outcome: ${{ steps.validate.outcome }}
      plan_outcome: ${{ steps.plan.outcome }}
    
    defaults:
      run:
        working-directory: ${{ inputs.working_directory }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ inputs.terraform_version }}
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.azure_credentials }}
    
    - name: Terraform Format Check
      id: fmt
      run: terraform fmt -check
      continue-on-error: true
    
    - name: Terraform Init
      id: init
      run: terraform init
    
    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
    
    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -input=false -out=tfplan
      continue-on-error: true
    
    - name: Upload Terraform Plan
      uses: actions/upload-artifact@v4
      if: steps.plan.outcome == 'success'
      with:
        name: terraform-plan-${{ github.run_id }}
        path: ${{ inputs.working_directory }}/tfplan
        retention-days: 5
    
    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1
