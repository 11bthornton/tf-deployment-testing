name: Deploy

on:
  workflow_dispatch:

permissions:
  issues: write
  contents: read

jobs:
  deploy-dev:
    name: 'Dev'
    uses: ./.github/workflows/deploy.template.yml
    with:
      github-environment: dev
      environment: dev
      iac-config-directory: infrastructure
    secrets:
      azure_service_connection: ${{ secrets.AZURE_CREDENTIALS }}

  display-release-notes:
    name: 'Release Notes'
    needs: deploy-dev
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Display Release Notes
        run: |
          echo "## Release Notes" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ -f "release-notes.md" ]; then
            cat release-notes.md >> $GITHUB_STEP_SUMMARY
          else
            echo "No release notes found." >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Please review the above changes before approving deployment to production." >> $GITHUB_STEP_SUMMARY

  production_gate:
    name: 'Production Gate'
    needs: [deploy-dev, display-release-notes]
    runs-on: ubuntu-latest
    environment: production_gate

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version number
        id: get_version
        run: |
          # Example: derive version from tag or date or file
          VERSION="v1.2.3"  
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      # - name: Create Git tag for version
      #   run: |
      #     git config user.name "github-actions"
      #     git config user.email "actions@github.com"
      #     git tag ${{ steps.get_version.outputs.version }}
      #     git push origin ${{ steps.get_version.outputs.version }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-prod:
    name: 'Prod'
    needs: [deploy-dev, display-release-notes, production_gate]
    uses: ./.github/workflows/deploy.template.yml
    with:
      github-environment: prod
      environment: prod
      iac-config-directory: infrastructure
    secrets:
      azure_service_connection: ${{ secrets.AZURE_CREDENTIALS }}

    